{"ast":null,"code":"var _jsxFileName = \"/Users/twandev/Desktop/new React/note-app/src/App.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"reactstrap\";\nimport Desk from \"./containers/Desk/Desk\";\nimport \"./App.css\";\n\nconst App = props => {\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Desk, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;\nContainer.propTypes = {\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]) // applies .container-fluid class if bool or .container-{breakpoint} if string\n\n};","map":{"version":3,"sources":["/Users/twandev/Desktop/new React/note-app/src/App.js"],"names":["React","PropTypes","Container","Desk","App","props","propTypes","fluid","oneOfType","bool","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,eAAeD,GAAf;AAEAF,SAAS,CAACI,SAAV,GAAsB;AACpBC,EAAAA,KAAK,EAAEN,SAAS,CAACO,SAAV,CAAoB,CAACP,SAAS,CAACQ,IAAX,EAAiBR,SAAS,CAACS,MAA3B,CAApB,CADa,CAEpB;;AAFoB,CAAtB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"reactstrap\";\n\nimport Desk from \"./containers/Desk/Desk\";\nimport \"./App.css\";\n\nconst App = (props) => {\n  return (\n    <Container className=\"App\">\n      <Desk />\n    </Container>\n  );\n};\n\nexport default App;\n\nContainer.propTypes = {\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  // applies .container-fluid class if bool or .container-{breakpoint} if string\n};\n"]},"metadata":{},"sourceType":"module"}